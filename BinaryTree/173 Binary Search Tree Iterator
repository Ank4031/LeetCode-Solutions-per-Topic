# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class BSTIterator:

    def __init__(self, root: Optional[TreeNode]):
        self.lis = []
        self.c = -1
        def inord(root):
            if root:
                inord(root.left)
                self.lis.append(root.val)
                inord(root.right)
        inord(root)

    def next(self) -> int:
        self.c+=1
        return self.lis[self.c]

    def hasNext(self) -> bool:
        if self.c+1 >= len(self.lis):
            return False
        else:
            return True


# Your BSTIterator object will be instantiated and called as such:
# obj = BSTIterator(root)
# param_1 = obj.next()
# param_2 = obj.hasNext()
