# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        if not root:
            return []
        result = []
        queue = []
        i,j=0,0
        queue.append(root)
        while i<len(queue):
            if queue[i].left:
                queue.append(queue[i].left)
                j+=1
            if queue[i].right:
                queue.append(queue[i].right)
                j+=1
            result.append(queue[i].val)
            c=0
            i+=1
            while i<j:
                if queue[i].left:
                    queue.append(queue[i].left)
                    c+=1
                if queue[i].right:
                    queue.append(queue[i].right)
                    c+=1
                i+=1
            j+=c
        return result
            
        
