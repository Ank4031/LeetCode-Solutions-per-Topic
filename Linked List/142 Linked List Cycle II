# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head:
            return None
        lis = [head]
        tp = head
        check = False
        while tp: 
            if tp.next in lis:
                check = tp.next
                break
            else:
                lis.append(tp.next)
                tp = tp.next
        
        if check:
            return tp.next
        else:
            return None
        
